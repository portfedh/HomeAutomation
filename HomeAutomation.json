[
    {
        "id": "9fa32e4d.fa3428",
        "type": "tab",
        "label": "Cordilleras",
        "disabled": false,
        "info": ""
    },
    {
        "id": "b2c65771.dae488",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.17",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "858a7557.8ac92",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7e2bf980.9be478",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#0432ff",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey"
            }
        },
        "site": {
            "name": "Dashboard Cordilleras",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7678c708.feec48",
        "type": "ui_group",
        "name": "PresionAgua",
        "tab": "858a7557.8ac92",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "64dad33f.6fc4b4",
        "type": "influxdb",
        "hostname": "192.168.0.17",
        "port": "8086",
        "protocol": "http",
        "database": "Luz",
        "name": "Luz Cordilleras Influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "3748b460.039144",
        "type": "ui_group",
        "name": "Luz",
        "tab": "858a7557.8ac92",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "373fa459.54e07c",
        "type": "influxdb",
        "hostname": "192.168.0.17",
        "port": "8086",
        "protocol": "http",
        "database": "Agua",
        "name": "Agua Cordilleras Influxdb",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "",
        "rejectUnauthorized": false
    },
    {
        "id": "b7ad8a00.961ca8",
        "type": "telegram bot",
        "botname": "BiteSizeMxBot",
        "usernames": "Portfedh",
        "chatids": "-419616352",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": true
    },
    {
        "id": "aa0bf2bb.a5d088",
        "type": "ui_group",
        "name": "NivelAgua",
        "tab": "858a7557.8ac92",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "a1debab.18bdf48",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "PurpleAir",
        "name": "PurpleAir  InfluxDB",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "584d51e4.2ecda8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "Wunderground",
        "name": "WunderGround Influx",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "917a682e.4b0bb8",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 1 (5 min)",
        "topic": "cordilleras/medidor_corriente1",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "nl": false,
        "rap": false,
        "x": 160,
        "y": 60,
        "wires": [
            [
                "fc88a7.45e19f58",
                "5912a2dc.ee7fc4",
                "7ae236c1.5d7a38"
            ]
        ]
    },
    {
        "id": "b97c1588.7d44f8",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 2 (5 min)",
        "topic": "cordilleras/medidor_corriente2",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "nl": false,
        "rap": false,
        "x": 161,
        "y": 253,
        "wires": [
            [
                "70d08f39.f8bf38",
                "8c41eae2.38496",
                "2e7c1231.77ecfe"
            ]
        ]
    },
    {
        "id": "fc88a7.45e19f58",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 20,
        "wires": []
    },
    {
        "id": "77c92b2c.423a54",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 3 (5 min)",
        "topic": "cordilleras/medidor_corriente3",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "x": 161,
        "y": 451,
        "wires": [
            [
                "617b3b4c.7dab4c",
                "ceb292db.07c008",
                "c6f291fc.a30c78"
            ]
        ]
    },
    {
        "id": "617b3b4c.7dab4c",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 440,
        "y": 400,
        "wires": []
    },
    {
        "id": "e93a3010.cb179",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Presion de Agua Bar (5 min)",
        "topic": "cordilleras/water_pressure_bar",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "x": 181,
        "y": 660,
        "wires": [
            [
                "76e4a364.4affbc",
                "8d6544d9.e0b99",
                "14dcd85a.151628"
            ]
        ]
    },
    {
        "id": "76e4a364.4affbc",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Presion Agua Bar",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 454,
        "y": 600,
        "wires": []
    },
    {
        "id": "c0b754bd.556c38",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Presion de Agua PSI (5 min)",
        "topic": "cordilleras/water_pressure_psi",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "nl": false,
        "rap": false,
        "x": 181,
        "y": 900,
        "wires": [
            [
                "35dd0cba.540164",
                "61aa7a0f.60909c",
                "35e55562.a0449a"
            ]
        ]
    },
    {
        "id": "70d08f39.f8bf38",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Luz Medidor 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 200,
        "wires": []
    },
    {
        "id": "35dd0cba.540164",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Presion Agua PSI",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 450,
        "y": 843,
        "wires": []
    },
    {
        "id": "5912a2dc.ee7fc4",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 1 JSON",
        "func": "msg.payload = Number(msg.payload);\nflow.set(\"luz_medidor_1\",msg.payload);\nflow.set(\"sensor_corriente_luz\",\"ESP32\");\nreturn {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8c41eae2.38496",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 2 JSON",
        "func": "msg.payload = Number(msg.payload);\n// transforms payload from a string to a number\n\nflow.set(\"luz_medidor_2\",msg.payload);\n// Creates a variable called luz_medidor_2\n// Assignes the payload number as its value.\n\nflow.set(\"sensor_corriente_luz\",\"ESP32\");\n// Creates a variable called sensor_corriente_luz\n// Assignes the value ESP32 as its identifier\n\nreturn {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 253,
        "wires": [
            []
        ]
    },
    {
        "id": "ceb292db.07c008",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 3 JSON",
        "func": "msg.payload = Number(msg.payload);\nflow.set(\"luz_medidor_3\",msg.payload);\nflow.set(\"sensor_corriente_luz\",\"ESP32\");\n\nreturn {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 451,
        "wires": [
            []
        ]
    },
    {
        "id": "1ce50914.739bbf",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Preparar Influx Presion Agua",
        "func": "var today = new Date();\n\nvar date = today.getFullYear()+\n            '-'+ (today.getMonth()+1)+\n            '-'+ today.getDate() + \n            ' ' + today.getHours() + \n            \":\" + today.getMinutes() + \n            \":\" + today.getSeconds();\n\nmsg.payload = { \n    Timestamp:date, \n    Device:flow.get(\"sensor_presion_agua\"), \n    Presion_Bar:flow.get(\"presion_agua_bar\"),\n    Presion_PSI:flow.get(\"presion_agua_psi\"),\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "a4cb2548.b653f",
                "7552b9ad.14f2e8"
            ]
        ]
    },
    {
        "id": "7552b9ad.14f2e8",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 180,
        "wires": []
    },
    {
        "id": "a4cb2548.b653f",
        "type": "influxdb out",
        "z": "9fa32e4d.fa3428",
        "influxdb": "373fa459.54e07c",
        "name": "Presion_Agua",
        "measurement": "Presion_Agua",
        "precision": "m",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "7ae236c1.5d7a38",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 1",
        "group": "3748b460.039144",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Medidor 1",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 100,
        "wires": []
    },
    {
        "id": "14dcd85a.151628",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Presion en Bar",
        "group": "7678c708.feec48",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "donut",
        "title": "Presion de Agua Bar",
        "label": "Bars",
        "format": "{{value}}",
        "min": 0,
        "max": "5",
        "colors": [
            "#c93737",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 444,
        "y": 720,
        "wires": []
    },
    {
        "id": "61aa7a0f.60909c",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Presion en PSI",
        "group": "7678c708.feec48",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Presion de Agua PSI",
        "label": "PSI",
        "format": "{{value}}",
        "min": 0,
        "max": "73",
        "colors": [
            "#c93737",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 440,
        "y": 956,
        "wires": []
    },
    {
        "id": "83fb1dcd.8f5df",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Preparar Influx Luz",
        "func": "msg.payload = { \n    Device:flow.get(\"sensor_corriente_luz\"), \n    Corriente_Medidor1:flow.get(\"luz_medidor_1\"),\n    Corriente_Medidor2:flow.get(\"luz_medidor_2\"),\n    Corriente_Medidor3:flow.get(\"luz_medidor_3\"),\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 80,
        "wires": [
            [
                "8dc7cb4f.acd778",
                "ffacf48b.2ecee8"
            ]
        ]
    },
    {
        "id": "8dc7cb4f.acd778",
        "type": "influxdb out",
        "z": "9fa32e4d.fa3428",
        "influxdb": "64dad33f.6fc4b4",
        "name": "Corriente_Luz",
        "measurement": "Corriente_Luz",
        "precision": "m",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1260,
        "y": 80,
        "wires": []
    },
    {
        "id": "8d6544d9.e0b99",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Presion Bar JSON",
        "func": "msg.payload = Number(msg.payload);\nflow.set(\"presion_agua_bar\",msg.payload);\nflow.set(\"sensor_presion_agua\",\"Wemos D1\");\n\nreturn {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 454,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "2e7c1231.77ecfe",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 2",
        "group": "3748b460.039144",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Medidor 2",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 300,
        "wires": []
    },
    {
        "id": "88ff7e2d.5bf43",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Database Storage (5 min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 740,
        "y": 88,
        "wires": [
            [
                "83fb1dcd.8f5df"
            ]
        ]
    },
    {
        "id": "bf913265.602dc",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Database Storage (5 min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 740,
        "y": 220,
        "wires": [
            [
                "1ce50914.739bbf"
            ]
        ]
    },
    {
        "id": "c6f291fc.a30c78",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Medidor 3",
        "group": "3748b460.039144",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Medidor 3",
        "label": "Amps",
        "format": "{{value}}",
        "min": 0,
        "max": "20",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 430,
        "y": 500,
        "wires": []
    },
    {
        "id": "ffacf48b.2ecee8",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Payload a InfluxDB",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "35e55562.a0449a",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Presion PSI JSON",
        "func": "\nmsg.payload = Number(msg.payload);\nflow.set(\"presion_agua_psi\",msg.payload);\nflow.set(\"sensor_presion_agua\",\"Wemos D1\");\nreturn {payload: msg.payload};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "a6b75290.875f8",
        "type": "comment",
        "z": "9fa32e4d.fa3428",
        "name": "Retention Policies",
        "info": "Water Pressure\n-----------------\nMQTT Samples     = Every 5 minutes\n\nInfluxDB Storage = \n    Samples:      Every 5 minutes\n    Database:     Agua\n    Measurement:  Presion_Agua\n    Retention:    24 hours\n    \n    Samples:      Every 60 minutes\n    Database:     Agua\n    Measurement:  Presion_Agua_1h\n    Retention:    1 year\n    \n\n    \nEnergy Monitor\n-----------------\nMQTT Samples     = Every 5 minutes\n\nInfluxDB Storage = \n    Samples:      Every 5 minutes\n    Database:     Luz\n    Measurement:  Corriente_Luz\n    Retention:    1 month\n    \n\nPurpleAir Air Quality Monitor\n--------------------------------\nhttp request samples = Every 5 minutes\n\nInfluxDB Storage = \n    Samples:      Every 5 minutes\n    Database:     \n    Measurement:  PurpleAir\n    Retention:    1 month\n    \n    Samples:      Every 60 minutes\n    Database:     \n    Measurement:  PurpleAir_1h\n    Retention:    1 year\n    \nWeather Station\n------------------\nhttp request samples = Every 5 minutes\n\nInfluxDB Storage = \n    Samples:      Every 5 minutes\n    Database:     \n    Measurement:  IMEXICOC44\n    Retention:    1 month\n    \n    Samples:      Every 60 minutes\n    Database:     \n    Measurement:  IMEXICOC44_1h\n    Retention:    1 year\n\n\n    ",
        "x": 710,
        "y": 20,
        "wires": []
    },
    {
        "id": "732340a6.4e9b98",
        "type": "telegram sender",
        "z": "9fa32e4d.fa3428",
        "name": "Sender Test",
        "bot": "b7ad8a00.961ca8",
        "haserroroutput": true,
        "outputs": 2,
        "x": 1130,
        "y": 900,
        "wires": [
            [],
            [
                "740c46d0.065ee"
            ]
        ]
    },
    {
        "id": "740c46d0.065ee",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Telegram Test",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1340,
        "y": 800,
        "wires": []
    },
    {
        "id": "50d8b7f9.5c3f9",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Telegram",
        "func": "var Corriente_Medidor1 = 1; //flow.get(\"luz_medidor_1\");\n//Corriente_Medidor2:flow.get(\"luz_medidor_2\"),\n//Corriente_Medidor3:flow.get(\"luz_medidor_3\"),\n\n\nif (Corriente_Medidor1 >= 1) {\n   msg.payload = { \n    chatId:-419616352, \n    type:\"message\",\n    content:\"Function test message\"};\n} else {\n   msg.payload = null;\n}\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 900,
        "wires": [
            [
                "732340a6.4e9b98",
                "740c46d0.065ee"
            ]
        ]
    },
    {
        "id": "be7a9f30.af1488",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Push to Telegram",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 740,
        "y": 900,
        "wires": [
            [
                "50d8b7f9.5c3f9"
            ]
        ]
    },
    {
        "id": "c1aadcb2.1bee78",
        "type": "mqtt in",
        "z": "9fa32e4d.fa3428",
        "name": "Nivel Agua (5 min)",
        "topic": "cordilleras/nivel_agua_tinaco",
        "qos": "0",
        "datatype": "auto",
        "broker": "b2c65771.dae488",
        "x": 150,
        "y": 1080,
        "wires": [
            [
                "6992a824.29b3b",
                "2c98c221.1746c6"
            ]
        ]
    },
    {
        "id": "6992a824.29b3b",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Distancia Sensor CM",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 1080,
        "wires": []
    },
    {
        "id": "2c98c221.1746c6",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Calculo de Nivel Agua",
        "func": "// Codigo para calcular los Litros de Agua disponibles en los tinacos. \n\n// Obtener la distancia del sensor en metros\nmsg.payload = Number(msg.payload)/100;\ndistancia_sensor = msg.payload;\n\n// Definiendo Variables\nvar pi = 3.141592;\nvar Litros = 0;\nvar VolumenCilindroLleno = 998;\n\n// Funcion para calcular agua en Frustrum (Parte alta del tinaco)\nfunction VolumenFrustrum(x) {\n    height = 0.25 - x + 0.10\n    VolumenMetrosCubicosF = (pi/3)*height*(0.55**2 + 0.30**2 + 0.55*0.30)\n    return VolumenMetrosCubicosF*1000\n  }\n\n// Funcion para calcular agua en Cilindro (Parte principal del tinaco)\nfunction VolumenCilindro(x) {\n    height = 1.05 - x + 0.35\n    VolumenMetrosCubicosC = pi * 0.55**2 * height\n    return VolumenMetrosCubicosC*1000\n  }\n\n// Prueba para determinar el volumen de agua total disponible\nif (distancia_sensor < 0.20) {\n    Mensaje = \"Error: El valor es muy bajo. Revisar Sensor\";\n    Litros = 0;\n    msg.payload = Litros\n\n  } else if (distancia_sensor >= 0.20 && distancia_sensor <= 0.35) {\n    Mensaje = \"El agua esta en el Frustrum\";\n    Litros = VolumenFrustrum(distancia_sensor)+ VolumenCilindroLleno;\n    Litros = Math.round(Litros*2) // Multiplicar x 2 por ser dos tinacos\n    msg.payload = Litros\n\n  } else if (distancia_sensor > 0.35 && distancia_sensor <= 1.40) {\n    Mensaje = \"El agua esta en el cilindro\";\n    Litros = VolumenCilindro(distancia_sensor);\n    Litros = Math.round(Litros*2) // Multiplicar x 2 por ser dos tinacos\n    msg.payload = Litros\n\n  } else {\n    Mensaje = \"Error: El valor es muy alto. Revisar Sensor\";\n    Litros = 9999;\n    msg.payload = Litros\n  }\n\n// Preparar para envio\nmsg.payload = Number(msg.payload);\nflow.set(\"Agua_Tinaco\",msg.payload);\nflow.set(\"sensor_nivel_agua\",\"ESP 8266\");\nreturn {payload: msg.payload};\n\n\n\n\n\n\n\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "// Existen dos tinacos de 1,100L en la azotea. \n// El volumen maximo Teorico es de 2,200L\n\n// El volumen del Agua del tinaco es la suma de dos medidas. \n//     El volumen de un Frustum (Cono cortado)\n//     El Volumen de un cilindro\n\n// Medidas de el Frustrum\n//     Altura = 0.25m\n//     Radio1 = 0.55m\n//     Radio2 = 0.30m\n\n// Medidas de el cilindro\n//     Altura = 1.05m\n//     Radio =  0.55m\n\n// Valor de Pi para las formulas\n//     Pi = 3.141592",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1140,
        "wires": [
            [
                "47951f30.71ef88",
                "4228b207.2ba3a4"
            ]
        ]
    },
    {
        "id": "47951f30.71ef88",
        "type": "ui_gauge",
        "z": "9fa32e4d.fa3428",
        "name": "Litros de Agua en Tinacos",
        "group": "aa0bf2bb.a5d088",
        "order": 3,
        "width": 0,
        "height": 0,
        "gtype": "wave",
        "title": "Litros Agua en Tinacos",
        "label": "L",
        "format": "{{value}}",
        "min": 0,
        "max": "2200",
        "colors": [
            "#c93737",
            "#e6e600",
            "#00b500"
        ],
        "seg1": "",
        "seg2": "",
        "x": 710,
        "y": 1140,
        "wires": []
    },
    {
        "id": "4228b207.2ba3a4",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Nivel Agua en Litros",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1200,
        "wires": []
    },
    {
        "id": "80d223e7.cdac28",
        "type": "influxdb out",
        "z": "9fa32e4d.fa3428",
        "influxdb": "373fa459.54e07c",
        "name": "NivelTinaco_Agua",
        "measurement": "Tinaco_Agua",
        "precision": "m",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1290,
        "y": 340,
        "wires": []
    },
    {
        "id": "729a10ae.952a2",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1270,
        "y": 300,
        "wires": []
    },
    {
        "id": "40fb5ef2.ff5168",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Preparar Influx Agua Tinaco",
        "func": "var today = new Date();\n\nvar date = today.getFullYear()+\n            '-'+ (today.getMonth()+1)+\n            '-'+ today.getDate() + \n            ' ' + today.getHours() + \n            \":\" + today.getMinutes() + \n            \":\" + today.getSeconds();\n\nmsg.payload = { \n    Timestamp:date, \n    Device:flow.get(\"sensor_nivel_agua\"), \n    Nivel_Agua_Tinaco:flow.get(\"Agua_Tinaco\"),\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 340,
        "wires": [
            [
                "80d223e7.cdac28",
                "729a10ae.952a2"
            ]
        ]
    },
    {
        "id": "d46abdb4.fd9a2",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Database Storage (5 min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "str",
        "x": 740,
        "y": 340,
        "wires": [
            [
                "40fb5ef2.ff5168"
            ]
        ]
    },
    {
        "id": "a4b00799.839d68",
        "type": "http request",
        "z": "9fa32e4d.fa3428",
        "name": "PurpleAir Http Request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.purpleair.com/json?key=Q1FR89G4NDMCDFY4&show=19071",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1030,
        "y": 520,
        "wires": [
            [
                "9e901c71.4ce12"
            ]
        ]
    },
    {
        "id": "84549203.cb89e",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Database Storage (5 min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 760,
        "y": 520,
        "wires": [
            [
                "a4b00799.839d68"
            ]
        ]
    },
    {
        "id": "9e901c71.4ce12",
        "type": "json",
        "z": "9fa32e4d.fa3428",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1230,
        "y": 520,
        "wires": [
            [
                "85756c15.40f898"
            ]
        ]
    },
    {
        "id": "187251d0.558b46",
        "type": "influxdb out",
        "z": "9fa32e4d.fa3428",
        "influxdb": "a1debab.18bdf48",
        "name": "PurpleAir",
        "measurement": "PurpleAir",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1600,
        "y": 520,
        "wires": []
    },
    {
        "id": "85756c15.40f898",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Calidad Aire JSON",
        "func": "\nmsg.payload = { \n    TimestampA:msg.payload.results[0].LastSeen,\n    TimestampB:msg.payload.results[1].LastSeen,\n    PM2_5ValueA:Number(msg.payload.results[0].PM2_5Value),\n    PM2_5ValueB:Number(msg.payload.results[1].PM2_5Value),\n    Humidity:Number(msg.payload.results[0].humidity),\n    Temp_f:Number(msg.payload.results[0].temp_f),\n    Pressure:Number(msg.payload.results[0].pressure),\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1390,
        "y": 520,
        "wires": [
            [
                "b11dc5e2.41fef8",
                "187251d0.558b46"
            ]
        ]
    },
    {
        "id": "b11dc5e2.41fef8",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Testing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 480,
        "wires": []
    },
    {
        "id": "f1029c4.9997ce",
        "type": "comment",
        "z": "9fa32e4d.fa3428",
        "name": "PurpleAirDataFormat",
        "info": "## Header Descriptions\nUTCDateTime: The Date and time derived from the Real Time Clock and synced with NTP where possible (in UTC).\nMac_address: The MAC address of the WiFi module on the sensor (used as an ID for the unit).\nFirmware_ver: Firmware version of the control board.\nHardware: Hardware the control board has detected.\ncurrent_temp_f: Current temperature in F.\nCurrent_humidity: Current Humidity in %.\nCurrent_dewpoint_f: Calculated dew point in F.\nPressure: Current pressure in millibars.\nAdc: The voltage reading on the analog input of the control board.\nMem: Free HEAP memory on the control board.\nRssi: WiFi signal strength in dBm\nUptime: Firmware uptime in seconds.\n\n\nPm1_0_atm: Channel A ATM PM1.0 particulate mass in ug/m3\nPm2_5_atm: Channel A ATM PM2.5 particulate mass in ug/m3\nPm10_0_atm: Channel A ATM PM10.0 particulate mass in ug/m3\nPm1_0_cf_1: Channel A CF=1 PM1.0 particulate mass in ug/m3\nPm2_5_cf_1: Channel A CF=1 PM2.5 particulate mass in ug/m3\nPm10_0_cf_1: Channel A CF=1 PM10.0 particulate mass in ug/m3\nP_0_3_um: Channel A 0.3 micrometer particle counts per deciliter of air\nP_0_5_um: Channel A 0.5 micrometer particle counts per deciliter of air\nP_1_0_um: Channel A 1.0 micrometer particle counts per deciliter of air\nP_2_5_um: Channel A 2.5 micrometer particle counts per deciliter of air\nP_5_0_um: Channel A 5.0 micrometer particle counts per deciliter of air\nP_10_0_um: Channel A 10.0 micrometer particle counts per deciliter of air\n\n\nPm1_0_atm_b: Channel B ATM PM1.0 particulate mass in ug/m3.\nPm2_5_atm_b: Channel B ATM PM2.5 particulate mass in ug/m3\nPm10_0_atm_b: Channel B ATM PM10.0 particulate mass in ug/m3\nPm1_0_cf_1_b: Channel B CF=1 PM1.0 particulate mass in ug/m3\nPm2_5_cf_1_b: Channel B CF=1 PM2.5 particulate mass in ug/m3\nPm10_0_cf_1_b: Channel B CF=1 PM10.0 particulate mass in ug/m3\nP_0_3_um_b: Channel B 0.3 micrometer particle counts per deciliter of air\nP_0_5_um_b: Channel B 0.5 micrometer particle counts per deciliter of air\nP_1_0_um_b: Channel B 1.0 micrometer particle counts per deciliter of air\nP_2_5_um_b: Channel B 2.5 micrometer particle counts per deciliter of air\nP_5_0_um_b: Channel B 5.0 micrometer particle counts per deciliter of air\nP_10_0_um_b: Channel B 10.0 micrometer particle counts per deciliter of air\n\nPA-II NOTES: Each sensor contains two identical laser counters, hence channel A and B. If these two channels do not agree to some extent then there is something wrong with one or both channels.\n\nPlantower PMS sensor notes: ATM is \"atmospheric\", meant to be used for outdoor applications CF=1 is meant to be used for indoor or controlled environment applications However, PurpleAir uses CF=1 values on the map. This value is lower than the ATM value in higher measured concentrations.",
        "x": 720,
        "y": 440,
        "wires": []
    },
    {
        "id": "4538d06a.75eef",
        "type": "inject",
        "z": "9fa32e4d.fa3428",
        "name": "Database Storage (5 min)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 760,
        "y": 640,
        "wires": [
            [
                "6f428c1b.d0f174"
            ]
        ]
    },
    {
        "id": "6f428c1b.d0f174",
        "type": "http request",
        "z": "9fa32e4d.fa3428",
        "name": "Wunderground Http Request",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.weather.com/v2/pws/observations/current?stationId=IMEXICOC44&format=json&units=m&apiKey=3481f4fcba81499081f4fcba81f990be",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "b8e7b776.d94ac8"
            ]
        ]
    },
    {
        "id": "b8e7b776.d94ac8",
        "type": "json",
        "z": "9fa32e4d.fa3428",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1230,
        "y": 640,
        "wires": [
            [
                "f330b337.86194"
            ]
        ]
    },
    {
        "id": "7f85265e.11a2d",
        "type": "debug",
        "z": "9fa32e4d.fa3428",
        "name": "Testing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 600,
        "wires": []
    },
    {
        "id": "f330b337.86194",
        "type": "function",
        "z": "9fa32e4d.fa3428",
        "name": "Wunderground JSON",
        "func": "\nmsg.payload = { \n    \n    solarRadiation:Number(msg.payload.observations[0].solarRadiation),\n    \n    uv:Number(msg.payload.observations[0].uv),\n    \n    humidity:Number(msg.payload.observations[0].humidity),\n    \n    temp:Number(msg.payload.observations[0].metric.temp),\n    \n    heatIndex:Number(msg.payload.observations[0].metric.heatIndex),\n    \n    pressure:Number(msg.payload.observations[0].metric.pressure),\n    \n    precipRate:Number(msg.payload.observations[0].metric.precipRate),\n    \n    precipTotal:Number(msg.payload.observations[0].metric.precipTotal),\n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1420,
        "y": 640,
        "wires": [
            [
                "c021e878.361328",
                "7f85265e.11a2d"
            ]
        ]
    },
    {
        "id": "c021e878.361328",
        "type": "influxdb out",
        "z": "9fa32e4d.fa3428",
        "influxdb": "584d51e4.2ecda8",
        "name": "WunderGround",
        "measurement": "IMEXICOC44",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1620,
        "y": 640,
        "wires": []
    }
]